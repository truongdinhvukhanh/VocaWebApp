@using VocaWebApp.Controllers

@model DashboardViewModel
@{
    ViewData["Title"] = "Dashboard - Bảng điều khiển";
    Layout = "_Layout";
}

<!-- Dashboard Container với màu nền xám nhạt -->
<div class="min-h-screen bg-gray-50 py-6">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        
        <!-- Header Section với chào mừng người dùng -->
        <div class="mb-8">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-4">
                    <!-- Avatar người dùng -->
                    <div class="relative">
                        @if (!string.IsNullOrEmpty(Model.UserProfileImageUrl))
                        {
                            <img src="@Model.UserProfileImageUrl" alt="Profile" 
                                 class="w-16 h-16 rounded-full border-4 border-blue-700 object-cover shadow-lg">
                        }
                        else
                        {
                            <div class="w-16 h-16 bg-gradient-to-r from-blue-700 to-blue-500 rounded-full flex items-center justify-center shadow-lg">
                                <span class="text-2xl font-bold text-white">
                                    @(Model.UserFullName?.Substring(0, Math.Min(2, Model.UserFullName.Length)).ToUpper() ?? "U")
                                </span>
                            </div>
                        }
                        <!-- Status indicator -->
                        <div class="absolute -bottom-1 -right-1 w-5 h-5 bg-green-500 rounded-full border-2 border-white"></div>
                    </div>
                    
                    <!-- Welcome message -->
                    <div>
                        <h1 class="text-3xl font-bold text-gray-800 mb-1">
                            Chào mừng trở lại, @Model.UserFullName!
                        </h1>
                        <p class="text-gray-600">
                            Hôm nay là @DateTime.Now.ToString("dddd, dd/MM/yyyy", new System.Globalization.CultureInfo("vi-VN"))
                        </p>
                    </div>
                </div>
                
                <!-- Quick Actions -->
                <div class="flex space-x-3">
                    <a href="@Url.Action("Create", "VocaSet")" 
                       class="bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded-xl font-semibold transition-all duration-300 hover:scale-105 hover:shadow-lg flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        Tạo bộ từ mới
                    </a>
                    <a href="@Url.Action("Index", "Explore")" 
                       class="bg-blue-700 hover:bg-blue-800 text-white px-4 py-2 rounded-xl font-semibold transition-all duration-300 hover:scale-105 hover:shadow-lg flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                        Khám phá
                    </a>
                </div>
            </div>
        </div>

        <!-- Stats Cards Row -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <!-- Tổng từ đã thuộc -->
            <div class="bg-white rounded-2xl shadow-xl border border-gray-200 p-6 hover:shadow-2xl transition-all duration-300">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-gray-600 text-sm font-medium mb-1">Tổng từ đã thuộc</p>
                        <p class="text-3xl font-bold text-blue-700">@Model.TotalLearnedWords</p>
                        <p class="text-green-600 text-sm font-medium">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
                            </svg>
                            Tích lũy kiến thức
                        </p>
                    </div>
                    <div class="w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center">
                        <svg class="w-6 h-6 text-blue-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </div>
                </div>
            </div>

            <!-- Từ học hôm nay -->
            <div class="bg-white rounded-2xl shadow-xl border border-gray-200 p-6 hover:shadow-2xl transition-all duration-300">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-gray-600 text-sm font-medium mb-1">Từ học hôm nay</p>
                        <p class="text-3xl font-bold text-green-600">@Model.TodayLearnedWords</p>
                        <p class="text-blue-600 text-sm font-medium">
                            Mục tiêu: @Model.DailyGoal từ/ngày
                        </p>
                    </div>
                    <div class="w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center">
                        <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </div>
                </div>
            </div>

            <!-- Tổng bộ từ vựng -->
            <div class="bg-white rounded-2xl shadow-xl border border-gray-200 p-6 hover:shadow-2xl transition-all duration-300">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-gray-600 text-sm font-medium mb-1">Tổng bộ từ vựng</p>
                        <p class="text-3xl font-bold text-purple-600">@Model.TotalVocaSets</p>
                        <p class="text-gray-500 text-sm">
                            @Model.PublicVocaSets công khai, @Model.PrivateVocaSets riêng tư
                        </p>
                    </div>
                    <div class="w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center">
                        <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 011-1h1m0 0a2 2 0 011 1v1M9 7h6"></path>
                        </svg>
                    </div>
                </div>
            </div>

            <!-- Tổng từ vựng -->
            <div class="bg-white rounded-2xl shadow-xl border border-gray-200 p-6 hover:shadow-2xl transition-all duration-300">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-gray-600 text-sm font-medium mb-1">Tổng từ vựng</p>
                        <p class="text-3xl font-bold text-orange-500">@Model.TotalWords</p>
                        <p class="text-gray-500 text-sm">
                            Kho từ vựng cá nhân
                        </p>
                    </div>
                    <div class="w-12 h-12 bg-orange-100 rounded-xl flex items-center justify-center">
                        <svg class="w-6 h-6 text-orange-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                        </svg>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            
            <!-- Left Column - 2/3 width -->
            <div class="lg:col-span-2 space-y-8">
                
                <!-- Daily Goal Progress -->
                <div class="bg-white rounded-2xl shadow-xl border border-gray-200 p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-xl font-bold text-gray-800 flex items-center">
                            <svg class="w-6 h-6 mr-3 text-blue-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                            </svg>
                            Tiến độ mục tiêu hôm nay
                        </h3>
                        <button onclick="updateDailyGoal()" class="text-blue-700 hover:text-blue-800 text-sm font-semibold">
                            Chỉnh sửa
                        </button>
                    </div>
                    
                    <!-- Progress Bar -->
                    <div class="mb-4">
                        <div class="flex justify-between items-center mb-2">
                            <span class="text-sm font-medium text-gray-600">
                                @Model.TodayLearnedWords / @Model.DailyGoal từ
                            </span>
                            <span class="text-sm font-bold text-blue-700">
                                @((int)Model.DailyProgress)%
                            </span>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-3">
                            <div class="bg-gradient-to-r from-blue-700 to-blue-500 h-3 rounded-full transition-all duration-500" 
                                 style="width: @Model.DailyProgress%"></div>
                        </div>
                    </div>
                    
                    @if (Model.DailyProgress >= 100)
                    {
                        <div class="bg-green-50 border border-green-200 rounded-xl p-4 flex items-center">
                            <svg class="w-6 h-6 text-green-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <div>
                                <p class="text-green-800 font-semibold">Chúc mừng! Bạn đã hoàn thành mục tiêu hôm nay!</p>
                                <p class="text-green-600 text-sm">Tiếp tục duy trì động lực học tập nhé!</p>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="bg-blue-50 border border-blue-200 rounded-xl p-4 flex items-center">
                            <svg class="w-6 h-6 text-blue-600 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                            </svg>
                            <div>
                                <p class="text-blue-800 font-semibold">
                                    Còn @(Model.DailyGoal - Model.TodayLearnedWords) từ nữa để đạt mục tiêu!
                                </p>
                                <p class="text-blue-600 text-sm">Hãy tiếp tục cố gắng nhé!</p>
                            </div>
                        </div>
                    }
                </div>

                <!-- Weekly Learning Stats Chart -->
                <div class="bg-white rounded-2xl shadow-xl border border-gray-200 p-6">
                    <h3 class="text-xl font-bold text-gray-800 mb-6 flex items-center">
                        <svg class="w-6 h-6 mr-3 text-blue-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                        </svg>
                        Thống kê 7 ngày gần đây
                    </h3>
                    
                    <div class="relative h-64">
                        <canvas id="weeklyStatsChart" width="400" height="200"></canvas>
                    </div>
                </div>

                <!-- Recent VocaSets -->
                <div class="bg-white rounded-2xl shadow-xl border border-gray-200 p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-xl font-bold text-gray-800 flex items-center">
                            <svg class="w-6 h-6 mr-3 text-blue-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                            </svg>
                            Bộ từ vựng gần đây
                        </h3>
                        <a href="@Url.Action("Index", "Folder")" class="text-blue-700 hover:text-blue-800 text-sm font-semibold">
                            Xem tất cả
                        </a>
                    </div>
                    
                    @if (Model.RecentVocaSets.Any())
                    {
                        <div class="space-y-4">
                            @foreach (var vocaSet in Model.RecentVocaSets)
                            {
                                <div class="border border-gray-200 rounded-xl p-4 hover:shadow-lg transition-all duration-300 hover:border-blue-300">
                                    <div class="flex items-center justify-between">
                                        <div class="flex-1">
                                            <h4 class="font-semibold text-gray-800 text-lg mb-1">@vocaSet.Name</h4>
                                            <p class="text-gray-600 text-sm mb-2">@vocaSet.Description</p>
                                            <div class="flex items-center space-x-4 text-xs text-gray-500">
                                                <span class="flex items-center">
                                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                                    </svg>
                                                    @(vocaSet.LastAccessed?.ToString("dd/MM HH:mm") ?? "Chưa xem")
                                                </span>
                                                <span class="flex items-center">
                                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                                    </svg>
                                                    @vocaSet.ViewCount lượt xem
                                                </span>
                                            </div>
                                        </div>
                                        <div class="flex items-center space-x-2">
                                            <a href="@Url.Action("Display", "VocaSet", new { id = vocaSet.Id })" 
                                               class="bg-blue-700 hover:bg-blue-800 text-white px-4 py-2 rounded-lg text-sm font-semibold transition-all duration-300">
                                                Xem
                                            </a>
                                            <a href="@Url.Action("Flashcard", "VocaSet", new { id = vocaSet.Id })" 
                                               class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm font-semibold transition-all duration-300">
                                                Học
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-8">
                            <svg class="w-16 h-16 text-gray-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                            </svg>
                            <p class="text-gray-500 mb-4">Bạn chưa có bộ từ vựng nào</p>
                            <a href="@Url.Action("Create", "VocaSet")" 
                               class="bg-blue-700 hover:bg-blue-800 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-300">
                                Tạo bộ từ đầu tiên
                            </a>
                        </div>
                    }
                </div>
            </div>

            <!-- Right Column - 1/3 width -->
            <div class="space-y-6">
                
                <!-- Review Reminders -->
                <div class="bg-white rounded-2xl shadow-xl border border-gray-200 p-6">
                    <h3 class="text-lg font-bold text-gray-800 mb-4 flex items-center">
                        <svg class="w-5 h-5 mr-2 text-orange-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        Nhắc nhở ôn tập
                    </h3>
                    
                    @if (Model.PendingReviews.Any())
                    {
                        <div class="space-y-3">
                            @foreach (var reminder in Model.PendingReviews)
                            {
                                <div class="bg-orange-50 border border-orange-200 rounded-xl p-4">
                                    <div class="flex items-start justify-between">
                                        <div class="flex-1">
                                            <h4 class="font-semibold text-orange-800 text-sm mb-1">
                                                @reminder.VocaSet?.Name
                                            </h4>
                                            <p class="text-orange-600 text-xs mb-2">
                                                Ôn tập lúc: @reminder.ReviewDate.ToString("HH:mm dd/MM")
                                            </p>
                                            <div class="flex space-x-2">
                                                <a href="@Url.Action("Flashcard", "VocaSet", new { id = reminder.VocaSetId })" 
                                                   class="bg-orange-500 hover:bg-orange-600 text-white px-3 py-1 rounded-lg text-xs font-semibold transition-all duration-300">
                                                    Ôn ngay
                                                </a>
                                                <button onclick="markReminderAsSeen(@reminder.Id)" 
                                                        class="text-orange-600 hover:text-orange-700 text-xs font-semibold">
                                                    Bỏ qua
                                                </button>
                                            </div>
                                        </div>
                                        <button onclick="markReminderAsSeen(@reminder.Id)" 
                                                class="text-gray-400 hover:text-gray-600">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-6">
                            <svg class="w-12 h-12 text-gray-300 mx-auto mb-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <p class="text-gray-500 text-sm">Không có lịch ôn tập nào</p>
                        </div>
                    }
                </div>

                <!-- Quick Settings -->
                <div class="bg-white rounded-2xl shadow-xl border border-gray-200 p-6">
                    <h3 class="text-lg font-bold text-gray-800 mb-4 flex items-center">
                        <svg class="w-5 h-5 mr-2 text-blue-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4"></path>
                        </svg>
                        Cài đặt nhanh
                    </h3>
                    
                    <div class="space-y-4">
                        <!-- Daily Goal Setting -->
                        <div>
                            <label class="block text-sm font-medium text-gray-600 mb-2">Mục tiêu hàng ngày</label>
                            <select id="dailyGoalSelect" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-white text-gray-800 focus:border-blue-700 focus:ring-2 focus:ring-blue-200 focus:outline-none">
                                <option value="5" selected="@(Model.DailyGoal == 5)">5 từ mỗi ngày</option>
                                <option value="10" selected="@(Model.DailyGoal == 10)">10 từ mỗi ngày</option>
                                <option value="20" selected="@(Model.DailyGoal == 20)">20 từ mỗi ngày</option>
                                <option value="30" selected="@(Model.DailyGoal == 30)">30 từ mỗi ngày</option>
                                <option value="50" selected="@(Model.DailyGoal == 50)">50 từ mỗi ngày</option>
                            </select>
                        </div>

                        <!-- Notification Settings -->
                        <div class="space-y-2">
                            <label class="flex items-center">
                                <input type="checkbox" @(Model.UserSettings.EmailNotifications ? "checked" : "") 
                                       class="w-4 h-4 text-blue-700 border-gray-300 rounded focus:ring-blue-700 focus:ring-2">
                                <span class="ml-3 text-sm text-gray-600">Thông báo email</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" @(Model.UserSettings.WebNotifications ? "checked" : "") 
                                       class="w-4 h-4 text-blue-700 border-gray-300 rounded focus:ring-blue-700 focus:ring-2">
                                <span class="ml-3 text-sm text-gray-600">Thông báo web</span>
                            </label>
                        </div>

                        <button onclick="saveQuickSettings()" 
                                class="w-full bg-blue-700 hover:bg-blue-800 text-white py-2 px-4 rounded-lg font-semibold transition-all duration-300">
                            Lưu cài đặt
                        </button>
                    </div>
                </div>

                <!-- Study Tips -->
                <div class="bg-gradient-to-br from-blue-50 to-purple-50 rounded-2xl border border-blue-200 p-6">
                    <h3 class="text-lg font-bold text-blue-800 mb-4 flex items-center">
                        <svg class="w-5 h-5 mr-2 text-blue-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
                        </svg>
                        Mẹo học tập
                    </h3>
                    
                    <div class="space-y-3 text-sm">
                        <div class="flex items-start space-x-3">
                            <div class="w-2 h-2 bg-blue-500 rounded-full mt-1.5 flex-shrink-0"></div>
                            <p class="text-blue-700">Học đều đặn mỗi ngày sẽ hiệu quả hơn học dồn một lúc</p>
                        </div>
                        <div class="flex items-start space-x-3">
                            <div class="w-2 h-2 bg-purple-500 rounded-full mt-1.5 flex-shrink-0"></div>
                            <p class="text-purple-700">Ôn tập lại các từ đã học sau 1 ngày, 3 ngày, 1 tuần</p>
                        </div>
                        <div class="flex items-start space-x-3">
                            <div class="w-2 h-2 bg-green-500 rounded-full mt-1.5 flex-shrink-0"></div>
                            <p class="text-green-700">Sử dụng từ vựng trong câu để ghi nhớ lâu hơn</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Daily Goal Update Modal -->
<div id="dailyGoalModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center">
    <div class="bg-white rounded-2xl p-8 max-w-md w-full mx-4">
        <h3 class="text-xl font-bold text-gray-800 mb-4">Cập nhật mục tiêu hàng ngày</h3>
        <form id="dailyGoalForm">
            <div class="mb-4">
                <label class="block text-gray-600 font-semibold mb-2">Số từ mỗi ngày</label>
                <select id="modalDailyGoal" class="w-full px-4 py-3 border border-gray-300 rounded-xl bg-white text-gray-800 focus:border-blue-700 focus:ring-2 focus:ring-blue-200 focus:outline-none">
                    <option value="5">5 từ mỗi ngày</option>
                    <option value="10">10 từ mỗi ngày</option>
                    <option value="15">15 từ mỗi ngày</option>
                    <option value="20">20 từ mỗi ngày</option>
                    <option value="30">30 từ mỗi ngày</option>
                    <option value="50">50 từ mỗi ngày</option>
                </select>
            </div>
            <div class="flex space-x-3">
                <button type="button" onclick="saveDailyGoal()" 
                        class="flex-1 bg-blue-700 hover:bg-blue-800 text-white py-3 px-6 rounded-xl font-semibold transition-all duration-300">
                    Lưu
                </button>
                <button type="button" onclick="closeDailyGoalModal()" 
                        class="flex-1 bg-gray-300 hover:bg-gray-400 text-gray-700 py-3 px-6 rounded-xl font-semibold transition-all duration-300">
                    Hủy
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Weekly Stats Chart
        const weeklyStatsData = @Html.Raw(Json.Serialize(Model.WeeklyStats.Select(ws => new { 
            date = ws.Key.ToString("MM/dd"), 
            words = ws.Value 
        })));

        const ctx = document.getElementById('weeklyStatsChart').getContext('2d');
        const weeklyChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: weeklyStatsData.map(d => d.date),
                datasets: [{
                    label: 'Từ đã học',
                    data: weeklyStatsData.map(d => d.words),
                    backgroundColor: 'rgba(32, 84, 147, 0.1)',
                    borderColor: '#205493',
                    borderWidth: 3,
                    fill: true,
                    tension: 0.4,
                    pointBackgroundColor: '#205493',
                    pointBorderColor: '#ffffff',
                    pointBorderWidth: 2,
                    pointRadius: 6,
                    pointHoverRadius: 8
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: '#f3f4f6'
                        },
                        ticks: {
                            color: '#6b7280'
                        }
                    },
                    x: {
                        grid: {
                            color: '#f3f4f6'
                        },
                        ticks: {
                            color: '#6b7280'
                        }
                    }
                }
            }
        });

        // Daily Goal Functions
        function updateDailyGoal() {
            document.getElementById('modalDailyGoal').value = @Model.DailyGoal;
            document.getElementById('dailyGoalModal').classList.remove('hidden');
        }

        function closeDailyGoalModal() {
            document.getElementById('dailyGoalModal').classList.add('hidden');
        }

        function saveDailyGoal() {
            const dailyGoal = document.getElementById('modalDailyGoal').value;
            
            fetch('@Url.Action("UpdateDailyGoal", "Dashboard")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                body: `dailyGoal=${dailyGoal}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Có lỗi xảy ra: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi cập nhật mục tiêu');
            });
        }

        // Mark Reminder as Seen
        function markReminderAsSeen(reminderId) {
            fetch(`@Url.Action("MarkReminderAsSeen", "Dashboard")/${reminderId}`, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    console.error('Failed to mark reminder as seen');
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }

        // Quick Settings
        function saveQuickSettings() {
            const dailyGoal = document.getElementById('dailyGoalSelect').value;
            
            fetch('@Url.Action("UpdateDailyGoal", "Dashboard")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                body: `dailyGoal=${dailyGoal}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Show success message
                    const successMsg = document.createElement('div');
                    successMsg.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-xl shadow-lg z-50';
                    successMsg.textContent = 'Cài đặt đã được lưu!';
                    document.body.appendChild(successMsg);
                    
                    setTimeout(() => {
                        successMsg.remove();
                    }, 3000);
                } else {
                    alert('Có lỗi xảy ra: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi lưu cài đặt');
            });
        }

        // Auto-refresh data every 5 minutes
        setInterval(() => {
            fetch('@Url.Action("GetWeeklyStats", "Dashboard")')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        weeklyChart.data.labels = data.data.map(d => d.date);
                        weeklyChart.data.datasets[0].data = data.data.map(d => d.words);
                        weeklyChart.update();
                    }
                })
                .catch(error => console.error('Error refreshing chart:', error));
        }, 300000); // 5 minutes
    </script>
}
